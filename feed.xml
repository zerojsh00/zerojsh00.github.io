<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://zerojsh00.github.io/</id><title>Simon's Research Center</title><subtitle>공부한 내용을 정리하는 공간입니다.</subtitle> <updated>2023-02-21T14:47:51+09:00</updated> <author> <name>Sanghyeon</name> <uri>https://zerojsh00.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://zerojsh00.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://zerojsh00.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 Sanghyeon </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>(NLP) DistilBERT 리뷰 및 설명</title><link href="https://zerojsh00.github.io/posts/DistilBERT/" rel="alternate" type="text/html" title="(NLP) DistilBERT 리뷰 및 설명" /><published>2023-02-20T00:00:00+09:00</published> <updated>2023-02-20T00:00:00+09:00</updated> <id>https://zerojsh00.github.io/posts/DistilBERT/</id> <content src="https://zerojsh00.github.io/posts/DistilBERT/" /> <author> <name>simon sanghyeon</name> </author> <category term="Natural Language Processing" /> <summary> 이 포스트는 개인적으로 공부한 내용을 정리하고 필요한 분들에게 지식을 공유하기 위해 작성되었습니다. 지적하실 내용이 있다면, 언제든 댓글 또는 메일로 알려주시기를 바랍니다. 01. Introduction 2018년, 자연어처리 영역의 위대한 한 획을 그은 BERT를 대표로하여, 자연어처리 영역은 대규모의 사전학습 언어모델(large-scale pre-trained langauge models)을 활용한 전이학습(transfer learning) 방식이 주를 이루고 있다. 당연하게도 언어모델이 커질수록 많은 파라미터들을 사용하게 되며, 그에 따라 훌륭한 성능을 달성할 수 있게 된다. 01-1. 거대 언어모델의 맹점 [출처] 원 논문 : DistilBERT, a distilled versi... </summary> </entry> <entry><title>(NLP) StarSpace</title><link href="https://zerojsh00.github.io/posts/StarSpace/" rel="alternate" type="text/html" title="(NLP) StarSpace" /><published>2023-02-13T00:00:00+09:00</published> <updated>2023-02-13T00:00:00+09:00</updated> <id>https://zerojsh00.github.io/posts/StarSpace/</id> <content src="https://zerojsh00.github.io/posts/StarSpace/" /> <author> <name>simon sanghyeon</name> </author> <category term="Natural Language Processing" /> <summary> 이 포스트는 개인적으로 공부한 내용을 정리하고 필요한 분들에게 지식을 공유하기 위해 작성되었습니다. 지적하실 내용이 있다면, 언제든 댓글 또는 메일로 알려주시기를 바랍니다. 00. 들어가기에 앞서 2017년, Facebook AI에서 공개한 StarSpace는 그 구조가 간단하면서도 다양한 도메인의 내용들을 임베딩할 수 있다는 강력한 장점을 가지고 있다. 챗봇의 의도 분류기를 연구했던 시절에 처음 접했던 개념이었지만, 개인적인 필요에 의해 다시 한 번 살펴볼 일이 있어 이참에 본 포스트를 통해 정리하고자 한다. 원 논문 StarSpace: Embed All The Things!를 참고하기를 바란다. 01. Introduction “a general-purpose neural embe... </summary> </entry> <entry><title>(NLP) BERTopic 개념 정리</title><link href="https://zerojsh00.github.io/posts/BERTopic/" rel="alternate" type="text/html" title="(NLP) BERTopic 개념 정리" /><published>2022-09-21T00:00:00+09:00</published> <updated>2022-09-21T17:52:01+09:00</updated> <id>https://zerojsh00.github.io/posts/BERTopic/</id> <content src="https://zerojsh00.github.io/posts/BERTopic/" /> <author> <name>simon sanghyeon</name> </author> <category term="Natural Language Processing" /> <summary> 이 포스트는 개인적으로 공부한 내용을 정리하고 필요한 분들에게 지식을 공유하기 위해 작성되었습니다. 지적하실 내용이 있다면, 언제든 댓글 또는 메일로 알려주시기를 바랍니다. 01. Introduction 전통적인 토픽 모델링의 방법으로는 Latent Dirichlet Allocation(LDA)와 Non-Negative Matrix Factorization(NMF)가 주로 사용된다. 이들은 document를 단어의 출현 빈도 기반으로 다루는 표현하는 방식인 Bag-of-Words(BoW)로써 설명한다는 특징이 있다. 따라서 모델이 단어들 간의 의미론적 관계를 포착하지 못하는 한계가 있다. 한편, BERT와 같은 트랜스포머 인코더 기반의 모델은 단어들 간의 양방향 문맥이 반영된 representa... </summary> </entry> <entry><title>(K8S) 인그레스와 인그레스 컨트롤러</title><link href="https://zerojsh00.github.io/posts/Ingress/" rel="alternate" type="text/html" title="(K8S) 인그레스와 인그레스 컨트롤러" /><published>2022-09-16T00:00:00+09:00</published> <updated>2022-09-16T00:00:00+09:00</updated> <id>https://zerojsh00.github.io/posts/Ingress/</id> <content src="https://zerojsh00.github.io/posts/Ingress/" /> <author> <name>simon sanghyeon</name> </author> <category term="Kubernetes" /> <summary> 이 글은 Mumshad Mannambeth가 강의한 Udemy의 Certified Kubernetes Administrator (CKA) with Practice Tests 강의 커리큘럼을 토대로 공부한 내용을 정리하였음을 밝힙니다. 인그레스의 간단한 개념 인그레스(ingress)라는 단어는 외부에서 내부로 향하는 것을 의미한다. 예를 들어, 인그레스 트래픽은 외부에서 서버 내부로 들어오는 트래픽을 의미한다. 쿠버네티스에서 인그레스란, 클러스터 외부에서 내부로 접근하는 요청들을 어떻게 처리할 것인지 정의해둔 규칙들의 모음이다. 인그레스는 아래와 같은 기능들을 제공한다. 트래픽 로드밸런싱 서비스에 외부 URL을 제공함 (외부 요청을 라우팅) /apple, /apple... </summary> </entry> <entry><title>(K8S) 쿠버네티스에서의 CoreDNS</title><link href="https://zerojsh00.github.io/posts/CoreDNS-in-Kubernetes/" rel="alternate" type="text/html" title="(K8S) 쿠버네티스에서의 CoreDNS" /><published>2022-09-16T00:00:00+09:00</published> <updated>2022-09-16T00:00:00+09:00</updated> <id>https://zerojsh00.github.io/posts/CoreDNS-in-Kubernetes/</id> <content src="https://zerojsh00.github.io/posts/CoreDNS-in-Kubernetes/" /> <author> <name>simon sanghyeon</name> </author> <category term="Kubernetes" /> <summary> 이 글은 Mumshad Mannambeth가 강의한 Udemy의 Certified Kubernetes Administrator (CKA) with Practice Tests 강의 커리큘럼을 토대로 공부한 내용을 정리하였음을 밝힙니다. 리눅스에서의 DNS /etc/hosts 리눅스 환경에서 DNS를 사용할 수 있는 방법은 /etc/hosts 파일을 이용하는 것이다. 이는 IP와 도메인 이름을 매핑하는 역할을 한다. 예를 들어, 아래와 같이 /etc/hosts 파일을 열어보면, 127.0.0.1이 localhost로 등록되어 있는 것을 확인할 수 있다. $ cat /etc/hosts # localhost is used to configure the loopback interface # when ... </summary> </entry> </feed>
